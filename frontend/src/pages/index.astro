---
import * as R from "remeda";
import { format } from "date-fns";
import type { MarkdownInstance } from "astro";
import type { Frontmatter } from "~/types";
import Layout from "../layouts/Layout.astro";

const posts: MarkdownInstance<Frontmatter>[] = await Astro.glob<Frontmatter>("./posts/*.md");

type Article = {
    title: string;
    url: string;
    body: string;
    createdAt: string;
};
const articles: Article[] = R.pipe(
    posts,
    R.sortBy(({ frontmatter: { createdAt } }) => -Number(createdAt)), // createdAtの降順にソート
    R.map(({ url, rawContent, frontmatter: { title, createdAt } }) => ({
        title: title,
        url: url ?? "/",
        body: rawContent(),
        // createdAtはもともとDate型のはずなのに、そのまま渡すと
        // string型を渡すなってdate-fnsに怒られるので、インスタンス化してから渡す
        createdAt: format(new Date(createdAt), "yyyy-MM-dd"),
    }))
);

console.log(articles);
---

<Layout title="hogeblog">
    <main>
        <a href="/">HOME</a>
        <h1>hogeblog</h1>
        {
            articles.map((article) => (
                <article>
                    url: {article.url}
                    <br />
                    createdAt: {article.createdAt}
                    <br />
                    title: {article.title}
                    <br />
                    body: {article.body}
                </article>
            ))
        }
    </main>
</Layout>
