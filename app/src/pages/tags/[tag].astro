---
import type { MarkdownInstance } from 'astro';
import { List } from '~/components/molecules/List';
import Layout from '~/layouts/Layout.astro';
import type { Frontmatter } from '~/types';
import { pageTitle } from '~/utils/constructString';
import { cardsToDescending } from '~/utils/process';

export const getStaticPaths = async () => {
    const posts = await Astro.glob<Frontmatter>('../../data/posts/*.md');
    const uniqueTags = [...new Set(posts.flatMap(({ frontmatter: { tags } }) => tags))];
    return uniqueTags.map((tag) => {
        const filteredPosts = posts.filter(({ frontmatter: { tags } }) => tags.includes(tag));
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
};

const { tag } = Astro.params;
type Props = { posts: MarkdownInstance<Frontmatter>[] };
const { posts } = Astro.props as Props; // Astro.propsの型が効かないためアサーション
const articles = cardsToDescending(posts.map(({ frontmatter }) => frontmatter));
---

<Layout title={pageTitle(`tag: ${tag}`)}>
    <h1 class="pl-5 pt-8 pb-5 text-3xl text-tertiary sm:text-4xl">#{tag}の記事一覧</h1>
    <List client:load cards={articles} />
</Layout>
