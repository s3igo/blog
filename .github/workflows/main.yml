name: CI

on: push

jobs:
  format-lint:
    name: Format and Lint
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
        env:
          HUSKY: 0
      - name: Run `astro check`
        run: pnpm run check
      - name: Run Prettier
        run: pnpm run format:fix
      - name: Run ESLint with fix options
        run: pnpm run lint:fix
      - name: Commit files modified by ESLint
        uses: stefanzweifel/git-auto-commit-action@8756aa072ef5b4a080af5dc8fef36c5d586e521d # v5
        with:
          commit_message: Apply Format and Lint changes

  lint-text:
    name: Textlint
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Run Textlint
        run: pnpm run lint:text

  test-type:
    name: Typecheck
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Build app
        run: pnpm run build
      - name: Run Vitest typecheck
        run: pnpm run test:type

  test-unit:
    name: Unit Test
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Run Vitest
        run: pnpm run test:unit

  test-e2e:
    name: E2E Test
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        browser:
          - chromium
          - firefox
          - webkit
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Store Playwright's version
        run: |
          PLAYWRIGHT_VERSION=$(pnpm ls @playwright/test | grep @playwright | awk '{ print $2 }')
          echo "Playwright's Version: $PLAYWRIGHT_VERSION"
          echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV
      - name: Cache Playwright browsers for Playwright's version
        id: cache-playwright
        uses: actions/cache@ab5e6d0c87105b4c9c2047343972218f562e4319 # v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}-${{ matrix.browser }}
      - name: Setup Playwright
        if: steps.cache-playwright.outputs.cache-hit != 'true'
        run: pnpm exec playwright install --with-deps ${{ matrix.browser }}
      - name: Install Additional Dependencies
        if: steps.cache-playwright.outputs.cache-hit == 'true'
        run: pnpm exec playwright install-deps ${{ matrix.browser }}
      - name: Build app
        run: pnpm run build
      - name: Run Playwright tests
        run: pnpm exec playwright test --project=${{ matrix.browser }}

  coverage:
    name: Coverage
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v2
      - name: Setup Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: Install dependencies
        run: pnpm install
      - name: Generate coverage file
        run: pnpm run coverage
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@ab904c41d6ece82784817410c45d8b8c02684457 # v3
        with:
          files: ./coverage/coverage-final.json

  dependencies:
    name: Dependencies
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
      - name: Validate Renovate Config
        uses: rinchsan/renovate-config-validator@main
        with:
          pattern: 'renovate.json5'
      - name: Install Nix
        uses: cachix/install-nix-action@v25
        with:
          github_access_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Dump toolchain updates
        run: |
          PNPM_VERSION=$(nix develop .#deps --command pnpm --version)
          nix develop .#deps --command node --version > .node-version \
            && corepack use "pnpm@$PNPM_VERSION"
      - name: Commit files modified in devShell
        uses: stefanzweifel/git-auto-commit-action@8756aa072ef5b4a080af5dc8fef36c5d586e521d # v5
        with:
          commit_message: Apply toolchain updates
